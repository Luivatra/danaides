"""init

Revision ID: c49f2075bc5b
Revises: 
Create Date: 2022-10-16 09:27:50.161710

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c49f2075bc5b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prices')
    op.drop_index('idx_utxos', table_name='utxos')
    op.drop_index('uq_utxos_boxid', table_name='utxos')
    op.drop_table('utxos')
    op.drop_index('uq_tokens', table_name='tokens')
    op.drop_table('tokens')
    op.drop_table('boxes')
    op.drop_index('ix_checkpoint_tokens_index', table_name='checkpoint_tokens')
    op.drop_table('checkpoint_tokens')
    op.drop_index('ix_checkpoint_utxos_index', table_name='checkpoint_utxos')
    op.drop_table('checkpoint_utxos')
    op.drop_index('ix_checkpoint_boxes_index', table_name='checkpoint_boxes')
    op.drop_table('checkpoint_boxes')
    op.drop_table('audit_log')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('service', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='audit_log_pkey')
    )
    op.create_table('checkpoint_boxes',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('box_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('height', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('nerg', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('is_unspent', sa.BOOLEAN(), autoincrement=False, nullable=True)
    )
    op.create_index('ix_checkpoint_boxes_index', 'checkpoint_boxes', ['index'], unique=False)
    op.create_table('checkpoint_utxos',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('box_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ergo_tree', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('nergs', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('registers', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('assets', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('creation_height', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('height', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_index('ix_checkpoint_utxos_index', 'checkpoint_utxos', ['index'], unique=False)
    op.create_table('checkpoint_tokens',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('token_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('height', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('token_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('decimals', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_index('ix_checkpoint_tokens_index', 'checkpoint_tokens', ['index'], unique=False)
    op.create_table('boxes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('box_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_unspent', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('nerg', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='boxes_pkey')
    )
    op.create_table('tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('decimals', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('token_name', sa.VARCHAR(length=1024), autoincrement=False, nullable=True),
    sa.Column('token_type', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('token_price', sa.NUMERIC(precision=32, scale=10), autoincrement=False, nullable=True),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='tokens_pkey')
    )
    op.create_index('uq_tokens', 'tokens', ['token_id'], unique=False)
    op.create_table('utxos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('box_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('ergo_tree', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('nergs', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('registers', postgresql.HSTORE(text_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('assets', postgresql.HSTORE(text_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('creation_height', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='utxos_pkey'),
    sa.UniqueConstraint('box_id', name='utxos_box_id_key')
    )
    op.create_index('uq_utxos_boxid', 'utxos', ['box_id'], unique=False)
    op.create_index('idx_utxos', 'utxos', ['box_id', 'ergo_tree', 'address', 'nergs', 'transaction_id', 'height'], unique=False)
    op.create_table('prices',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token_id', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=32, scale=10), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='prices_pkey')
    )
    # ### end Alembic commands ###
